@startuml
actor User
participant ":FinTrack" as FT
participant ":Ui" as UI
participant ":Parser" as P
participant ":FinanceManager" as FM

activate FT
FT -> UI: printWelcome()
activate UI
deactivate UI

create FM
FT -> FM: new FinanceManager()
activate FM
FM --> FT
deactivate FM

loop until user types "bye"
    User -> UI: "add-expense a/10 c/food d/2025-10-12"
    activate UI
    UI --> FT: input
    deactivate UI

    FT -> P: returnFirstWord(input)
    activate P
    P --> FT: "add-expense"
    deactivate P

    FT -> P: parseAddExpense(input)
    activate P
    P --> FT: expense
    deactivate P

    FT -> FM: addExpense(expense)
    activate FM
    FM --> FT: isOverBudget
    deactivate FM

    FT -> UI: printExpenseAdded(expense)
    activate UI
    deactivate UI

    opt isOverBudget == true
        FT -> FM: getTotalExpenseForCategory(category)
        activate FM
        FM --> FT
        deactivate FM

        FT -> FM: getBudgetForCategory(category)
        activate FM
        FM --> FT
        deactivate FM

        FT -> UI: printBudgetExceededWarning(...)
        activate UI
        deactivate UI
    end
end

FT -> UI: printExit()
activate UI
deactivate UI

deactivate FT
@enduml